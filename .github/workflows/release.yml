name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [linux, darwin]
        arch: [amd64, arm64]
        include:
          - os: linux
            runson: ubuntu-latest
          - os: darwin
            runson: macos-latest
        exclude:
          - os: darwin
            arch: arm64
    runs-on: ${{ matrix.runson }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Go 1.22
        if: matrix.arch == 'amd64'
        uses: actions/setup-go@v1
        with:
          go-version: 1.22

      - name: Build Binary - ${{ matrix.os }} ${{ matrix.arch }}
        if: matrix.arch == 'amd64'
        run: |
          go get -v -t -d ./...
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o oaspos 

      - name: Build Binary - ${{ matrix.os }} ${{ matrix.arch }}
        if: matrix.arch == 'arm64'
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker run --rm -t \
            -v ${{ github.workspace }}:${{ github.workspace }} \
            -w ${{ github.workspace }} \
            -e GOOS=${{ matrix.os }} \
            -e GOARCH=${{ matrix.arch }} \
            arm64v8/golang:1.22.9-bullseye go build -o oaspos 

      - name: Compress Binary
        run: zip oaspos-${{ matrix.os }}-${{ matrix.arch }}.zip ./oaspos

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}
          path: oaspos-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.ref_name }}
          path: artifacts

      - name: Create sha256sums.txt
        run: (cd artifacts && sha256sum *) > sha256sums.txt

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: true

      - name: Upload Asset - Linux x86_64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/oaspos-linux-amd64.zip
          asset_name: oaspos-${{ github.ref_name }}-linux-amd64.zip
          asset_content_type: application/zip

      - name: Upload Asset - Linux arm64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/oaspos-linux-arm64.zip
          asset_name: oaspos-${{ github.ref_name }}-linux-arm64.zip
          asset_content_type: application/zip

      - name: Upload Asset - macos
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/oaspos-darwin-amd64.zip
          asset_name: oaspos-${{ github.ref_name }}-macos.zip
          asset_content_type: application/zip

      - name: Upload Asset - sha256sums.txt
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sha256sums.txt
          asset_name: sha256sums.txt
          asset_content_type: text/plain
